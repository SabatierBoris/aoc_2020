name: Rust

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  CARGO_TERM_COLOR: always

jobs:
  prepare:
    runs-on: ubuntu-latest
    outputs:
      matrix: ${{ steps.set-matrix.outputs.matrix }}
    steps:
    - uses: actions/checkout@v2
    - id: set-matrix
      run: |
              JSON=$(ls -d day* | jq -R -s -c 'split("\n")[:-1] | map( {"day": .}) | {"include": .}')
              echo "::set-output name=matrix::${JSON}"

  build:
    needs: prepare
    runs-on: ubuntu-latest
    strategy:
      matrix: ${{fromJson(needs.prepare.outputs.matrix)}}
    steps:
    - uses: actions/checkout@v2
    - name: Format
      run: cargo fmt -- --check
      working-directory: ${{ matrix.day }}
    - name: Test
      run: cargo test
      working-directory: ${{ matrix.day }}
    - name: Build
      run: cargo build --verbose
      working-directory: ${{ matrix.day }}
